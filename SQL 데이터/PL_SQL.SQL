SET SERVEROUTPUT ON
--BEGIN
--    DBMS_OUTPUT.PUT_LINE('HELLO,PL/SQL!');
--    END;
--    
--DECLARE
--V_EMPNO NUMBER(4) := 7788;
--V_ENAME VARCHAR2(10);
--BEGIN
--V_ENAME := 'SCOTT';
--DBMS_OUTPUT.PUT_LINE('V_EMPNO : ' || V_EMPNO);
--DBMS_OUTPUT.PUT_LINE('V_ENAME : ' || V_ENAME);
--END;
--
--DECLARE
--V_TAX CONSTANT NUMBER(1) := 3;
--BEGIN
--DBMS_OUTPUT.PUT_LINE('V_TAX :' || V_TAX);
--END;
--
--DECLARE
--V_NUM NUMBER := 10;
--PI CONSTANT NUMBER := 3.141592;
--V_DEPTNO NUMBER(2) NOT NULL;
--V_CUNAME CUSTOMER.CU_NAME%TYPE;
--BEGIN
--DBMS_OUTPUT.PUT_LINE(PI);
--END;
--
--DECLARE
----V_CUST_ID CUSTOMER.CUST_ID%TYPE;
----V_CU_NAME CUSTOMER.CU_NAME%TYPE;
----V_TEL CUSTOMER.TEL%TYPE;
----V_ADDR CUSTOMER.ADDR%TYPE;
--V_CUSTROW CUSTOMER%ROWTYPE;
--BEGIN
--SELECT CUST_ID, CU_NAME, TEL, ADDR,EMAIL,GEN,BIRTH,CU_POINT
----INTO V_CUST_ID, V_CU_NAME, V_TEL, V_ADDR
--INTO V_CUSTROW
--FROM CUSTOMER
--WHERE CUST_ID = '10001';
----DBMS_OUTPUT.PUT_LINE(V_CUST_ID || V_CU_NAME || V_TEL || V_ADDR);
--DBMS_OUTPUT.PUT_LINE(V_CUSTROW.CUST_ID);
--DBMS_OUTPUT.PUT_LINE(V_CUSTROW.CU_NAME);
--DBMS_OUTPUT.PUT_LINE(V_CUSTROW.TEL);
--DBMS_OUTPUT.PUT_LINE(V_CUSTROW.ADDR);
--END;
--
--DECLARE
--V_EMPNO EMP.EMPNO%TYPE;
--V_ENAME EMP.ENAME%TYPE;
--V_SAL EMP.SAL%TYPE;
--V_DEPTNO EMP.DEPTNO%TYPE;
--GREADE VARCHAR2(10);
--V_DNAME VARCHAR2(20);
--BEGIN
--SELECT EMPNO, ENAME, SAL, DEPTNO INTO V_EMPNO, V_ENAME, V_SAL , V_DEPTNO
--FROM EMP
--WHERE EMPNO = 7369;
----SAL 15000 미만이면 GRADE '하위' 15000 ~ 20000 이면 중위 20000이상이면 상위
--DBMS_OUTPUT.PUT_LINE('EMPNO : ' || V_EMPNO);
--DBMS_OUTPUT.PUT_LINE('EMNAME : ' || V_ENAME);
--DBMS_OUTPUT.PUT_LINE('SAL : ' || V_SAL);
--IF V_SAL <= 1000 THEN
--GREADE := '하위';
--ELSIF V_SAL <= 2000 THEN
--GREADE := '중위';
--ELSE
--GREADE := '상위';
--END IF;
--
--CASE V_DEPTNO
--WHEN 10 THEN V_DNAME := 'ACCOUNTING';
--WHEN 20 THEN V_DNAME := 'RESEARCH';
--WHEN 30 THEN V_DNAME := 'SALES';
--WHEN 40 THEN V_DNAME := 'OPERATIONS';
--END CASE;
--
--DBMS_OUTPUT.PUT_LINE('GRADE : ' || GREADE);
--DBMS_OUTPUT.PUT_LINE('DNAME : ' || V_DNAME);

--END;

--DECLARE
--TYPE REC_DEPT IS RECORD(
--    DEPTNO NUMBER(2),
--    DNAME DEPT.DNAME%TYPE,
--    LOC DEPT.LOC%TYPE
--);
--DEPT_REC REC_DEPT;
--BEGIN
--DEPT_REC.DEPTNO := DNO;
--DEPT_REC.DNAME := DAN;
--DEPT_REC.LOC := DLO;
--INSERT INTO DEPT VALUES DEPT_REC;
--DBMS_OUTPUT.PUT_LINE('데이터 삽입을 완료 했습니다');
--
--DBMS_OUTPUT.PUT_LINE('DEPTNO : ' || DEPT_REC.DEPTNO);
--DBMS_OUTPUT.PUT_LINE('DNAME : ' || DEPT_REC.DNAME);
--DBMS_OUTPUT.PUT_LINE('LOC : ' || DEPT_REC.LOC);
--END;

--create or replace procedure in_dept
--(dno in number, dna in varchar2, dlo in varchar2)
--is
--  type rec_dept is record(
--    deptno number(2),
--    dname dept.dname%type,
--    loc dept.loc%type
--    );
--    dept_rec rec_dept;
--begin
--  dept_rec.deptno := dno;
--  dept_rec.dname := dna;
--  dept_rec.loc := dlo;
--  insert into dept values dept_rec;
--  DBMS_OUTPUT.PUT_LINE('데이터 삽입을 완료 했습니다.');
--end;  
--
--execute in_dept(60, 'IT', 'DAEJEON');

DECLARE
TYPE REC_DEPT IS RECORD(
    DEPTNO DEPT.DEPTNO%TYPE,
    DNAME DEPT.DNAME%TYPE 
);
    TYPE ITAB_DEPT IS TABLE OF REC_DEPT INDEX BY PLS_INTEGER;
    
    DEPT_ARR ITAB_DEPT;
    IDX PLS_INTEGER := 0;
    
    BEGIN
        FOR I IN (SELECT DEPTNO, DNAME FROM DEPT) LOOP
        IDX := IDX + 1;
        DEPT_ARR(IDX).DEPTNO := I.DEPTNO;
        DEPT_ARR(IDX).DNAME := I.DNAME;
        
        DBMS_OUTPUT.PUT_LINE(DEPT_ARR(IDX).DEPTNO || ' : ' || DEPT_ARR(IDX).DNAME);
        END LOOP;
        END;


